Starting audit...
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\fileio\CardInput.java:3:8: Unused import - com.fasterxml.jackson.databind.ObjectMapper. [UnusedImports]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\fileio\CardInput.java:4:8: Unused import - com.fasterxml.jackson.databind.node.ObjectNode. [UnusedImports]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\fileio\CardInput.java:15:20: Variable 'hasAttacked' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\fileio\DecksInput.java:4:26: Using the '.*' form of import should be avoided - org.poo.main.cards.*. [AvoidStarImport]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\fileio\DecksInput.java:32:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\fileio\DecksInput.java:32:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\fileio\DecksInput.java:35:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\fileio\DecksInput.java:35:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\fileio\DecksInput.java:38:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\fileio\DecksInput.java:38:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\fileio\DecksInput.java:41:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\fileio\DecksInput.java:41:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\fileio\DecksInput.java:44:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\fileio\DecksInput.java:44:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\fileio\DecksInput.java:47:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\fileio\DecksInput.java:47:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\fileio\DecksInput.java:50:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\fileio\DecksInput.java:50:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\fileio\DecksInput.java:53:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\fileio\DecksInput.java:53:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Berserker.java:6:42: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Berserker.java:12:22: Parameter card should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Card.java:142: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Card.java:142:77: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Card.java:253: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Card.java:253:77: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Card.java:288:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Card.java:292:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Card.java:296:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Card.java:300:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Card.java:304:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Card.java:308:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Card.java:312:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Card.java:316:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Card.java:320:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Card.java:324:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Card.java:328:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Card.java:332:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Card.java:336:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getHasAttacked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getHasAttacked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Card.java:340:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setHasAttacked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setHasAttacked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Card.java:344:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'isFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'isFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Card.java:348:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setIsFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setIsFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Card.java:352:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'hasSpecialAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'hasSpecialAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Card.java:352:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Card.java:356:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setHasSpecialAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setHasSpecialAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Card.java:356:38: Parameter hasSpecialAbility should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Card.java:360:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getAllowedPosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getAllowedPosition' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Card.java:364:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setAllowedPosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setAllowedPosition' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Card.java:364:36: Parameter allowedPosition should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Disciple.java:6:49: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Disciple.java:12:21: Parameter card should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Disciple.java:17:5: Class 'Disciple' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Disciple' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Disciple.java:18:28: Parameter minionCard should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\EmpressThorina.java:14:27: Parameter card should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\EmpressThorina.java:18:5: Class 'EmpressThorina' looks like designed for extension (can be subclassed), but the method 'useHeroAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EmpressThorina' final or making the method 'useHeroAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\EmpressThorina.java:19:32: Parameter row should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\GeneralKocioraw.java:12:28: Parameter card should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\GeneralKocioraw.java:16:5: Class 'GeneralKocioraw' looks like designed for extension (can be subclassed), but the method 'useHeroAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GeneralKocioraw' final or making the method 'useHeroAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\GeneralKocioraw.java:17:32: Parameter row should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Goliath.java:5:40: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Goliath.java:11:20: Parameter card should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\HeroCard.java:3:8: Unused import - com.fasterxml.jackson.databind.ObjectMapper. [UnusedImports]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\HeroCard.java:18:19: '30' is a magic number. [MagicNumber]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\HeroCard.java:24:21: Parameter card should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\HeroCard.java:26:19: '30' is a magic number. [MagicNumber]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\HeroCard.java:32:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\HeroCard.java:32:43: Parameter heroCard should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\HeroCard.java:72:41: Parameter affectedRow should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\HeroCard.java:137:5: Class 'HeroCard' looks like designed for extension (can be subclassed), but the method 'useHeroAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HeroCard' final or making the method 'useHeroAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\HeroCard.java:137:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\HeroCard.java:137:32: Parameter row should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\HeroCard.java:141:5: Class 'HeroCard' looks like designed for extension (can be subclassed), but the method 'hasUsedHeroAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HeroCard' final or making the method 'hasUsedHeroAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\HeroCard.java:141:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\HeroCard.java:145:5: Class 'HeroCard' looks like designed for extension (can be subclassed), but the method 'setHasUsedHeroAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HeroCard' final or making the method 'setHasUsedHeroAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\HeroCard.java:145:39: Parameter hasUsedHeroAbility should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\KingMudface.java:12:24: Parameter card should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\KingMudface.java:16:5: Class 'KingMudface' looks like designed for extension (can be subclassed), but the method 'useHeroAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'KingMudface' final or making the method 'useHeroAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\KingMudface.java:17:32: Parameter row should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\LordRoyce.java:13:22: Parameter card should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\LordRoyce.java:17:5: Class 'LordRoyce' looks like designed for extension (can be subclassed), but the method 'useHeroAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LordRoyce' final or making the method 'useHeroAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\LordRoyce.java:18:32: Parameter row should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\MinionCard.java:14:23: Parameter card should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\MinionCard.java:20:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'isTank' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'isTank' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\MinionCard.java:24:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'setTank' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'setTank' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\MinionCard.java:24:25: Parameter tank should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Miraj.java:6:46: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Miraj.java:13:18: Parameter card should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Miraj.java:18:5: Class 'Miraj' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Miraj' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Miraj.java:19:28: Parameter minionCard should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Sentinel.java:5:41: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Sentinel.java:11:21: Parameter card should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\SpecialAbilityCard.java:20:31: Parameter card should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\SpecialAbilityCard.java:168:5: Class 'SpecialAbilityCard' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SpecialAbilityCard' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\SpecialAbilityCard.java:168:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\SpecialAbilityCard.java:168:28: Parameter minionCard should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\SpecialAbilityCard.java:172:5: Class 'SpecialAbilityCard' looks like designed for extension (can be subclassed), but the method 'hasUsedAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SpecialAbilityCard' final or making the method 'hasUsedAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\SpecialAbilityCard.java:172:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\SpecialAbilityCard.java:176:5: Class 'SpecialAbilityCard' looks like designed for extension (can be subclassed), but the method 'setHasUsedAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SpecialAbilityCard' final or making the method 'setHasUsedAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\SpecialAbilityCard.java:176:35: Parameter hasUsedAbility should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\TheCursedOne.java:6:53: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\TheCursedOne.java:13:25: Parameter card should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\TheCursedOne.java:18:5: Class 'TheCursedOne' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheCursedOne' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\TheCursedOne.java:19:28: Parameter minionCard should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\TheRipper.java:6:50: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\TheRipper.java:12:22: Parameter card should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\TheRipper.java:17:5: Class 'TheRipper' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheRipper' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\TheRipper.java:18:28: Parameter minionCard should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Warden.java:6:39: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\cards\Warden.java:13:19: Parameter card should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Command.java:80:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Command.java:97:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Command.java:121:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Command.java:137:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Command.java:137:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Command.java:141:54: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Command.java:150:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Command.java:190:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Command.java:211:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Command.java:223:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Command.java:241:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Command.java:258:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Command.java:267:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Command.java:276:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Command.java:293:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Command.java:310:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Command.java:319:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Command.java:328:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Command.java:337:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\CommandHandler.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Main.java:118: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Main.java:119: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Player.java:45:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Player.java:66:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Player.java:87:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Player.java:206:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Table.java:30:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Table.java:45:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Table.java:58:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Table.java:73:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Table.java:98:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Table.java:103:21: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Table.java:103:21: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Table.java:104: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Table.java:104:45: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Table.java:111:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Table.java:139:31: Parameter tableCards should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Utility.java:3:1: Class Utility should be declared as final. [FinalClass]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Utility.java:5:22: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Utility.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Utility.java:10:35: Parameter Row should be final. [FinalParameters]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Utility.java:10:39: Name 'Row' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Utility.java:11:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Utility.java:11:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\POO_homeworks\homework1\tema\GwentStone_Lite\.\src\main\java\org\poo\main\Utility.java:11:31: '3' is a magic number. [MagicNumber]
Audit done.
Checkstyle ends with 154 errors.
